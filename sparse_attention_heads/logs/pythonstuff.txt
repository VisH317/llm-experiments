>>> val = torch.tensor([0, 0, 0, 1, 0, 0, 0, 1]).expand(4, 8)
>>> val.size()
torch.Size([4, 8])
>>> mult = val * Q
>>> mult
tensor([[[[-0.0000, -0.0000, -0.0000,  ...,  0.0000,  0.0000, -0.2852],
          [-0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000, -0.1519],
          [-0.0000,  0.0000, -0.0000,  ...,  0.0000, -0.0000,  0.9218],
          [-0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  1.9363]],

         [[ 0.0000, -0.0000,  0.0000,  ..., -0.0000, -0.0000,  0.7293],
          [-0.0000,  0.0000, -0.0000,  ..., -0.0000,  0.0000, -1.4966],
          [ 0.0000, -0.0000, -0.0000,  ...,  0.0000,  0.0000, -0.7414],
          [ 0.0000,  0.0000, -0.0000,  ...,  0.0000, -0.0000, -1.1218]],

         [[ 0.0000,  0.0000, -0.0000,  ...,  0.0000, -0.0000,  0.6266],
          [-0.0000,  0.0000,  0.0000,  ...,  0.0000, -0.0000, -1.1762],
          [ 0.0000, -0.0000,  0.0000,  ..., -0.0000,  0.0000,  0.0898],
          [ 0.0000,  0.0000,  0.0000,  ..., -0.0000,  0.0000,  0.6387]],

         ...,

         [[ 0.0000, -0.0000,  0.0000,  ...,  0.0000,  0.0000,  1.3776],
          [-0.0000, -0.0000, -0.0000,  ...,  0.0000,  0.0000,  0.4559],
          [-0.0000, -0.0000, -0.0000,  ..., -0.0000,  0.0000,  0.9095],
          [ 0.0000, -0.0000, -0.0000,  ..., -0.0000, -0.0000, -0.8777]],

         [[-0.0000, -0.0000, -0.0000,  ..., -0.0000, -0.0000,  0.6298],
          [ 0.0000, -0.0000,  0.0000,  ..., -0.0000,  0.0000,  0.1553],
          [-0.0000, -0.0000,  0.0000,  ..., -0.0000, -0.0000, -0.4990],
          [ 0.0000,  0.0000, -0.0000,  ..., -0.0000,  0.0000, -0.6537]],

         [[ 0.0000,  0.0000, -0.0000,  ...,  0.0000, -0.0000, -0.1926],
          [ 0.0000, -0.0000, -0.0000,  ..., -0.0000,  0.0000, -0.1992],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000, -1.2089],
          [ 0.0000, -0.0000,  0.0000,  ..., -0.0000,  0.0000,  1.6557]]],


        [[[ 0.0000, -0.0000, -0.0000,  ..., -0.0000,  0.0000, -0.1905],
          [-0.0000,  0.0000,  0.0000,  ...,  0.0000, -0.0000, -0.1297],
          [-0.0000, -0.0000, -0.0000,  ...,  0.0000, -0.0000,  1.0497],
          [ 0.0000, -0.0000, -0.0000,  ..., -0.0000,  0.0000, -0.8948]],

         [[-0.0000,  0.0000, -0.0000,  ..., -0.0000, -0.0000,  0.8374],
          [-0.0000,  0.0000,  0.0000,  ..., -0.0000, -0.0000, -1.4108],
          [ 0.0000, -0.0000,  0.0000,  ...,  0.0000,  0.0000,  1.0670],
          [ 0.0000, -0.0000,  0.0000,  ...,  0.0000,  0.0000,  2.3916]],

         [[-0.0000, -0.0000,  0.0000,  ..., -0.0000, -0.0000, -0.5299],
          [-0.0000, -0.0000, -0.0000,  ..., -0.0000, -0.0000,  1.9008],
          [ 0.0000,  0.0000, -0.0000,  ...,  0.0000, -0.0000,  0.7363],
          [ 0.0000, -0.0000, -0.0000,  ...,  0.0000,  0.0000, -0.6417]],

         ...,

         [[-0.0000,  0.0000, -0.0000,  ...,  0.0000, -0.0000, -0.3532],
          [ 0.0000, -0.0000,  0.0000,  ...,  0.0000,  0.0000, -1.8791],
          [ 0.0000, -0.0000, -0.0000,  ..., -0.0000,  0.0000, -1.3948],
          [ 0.0000,  0.0000, -0.0000,  ..., -0.0000, -0.0000, -0.4694]],

         [[ 0.0000,  0.0000, -0.0000,  ...,  0.0000,  0.0000, -0.9593],
          [ 0.0000,  0.0000, -0.0000,  ...,  0.0000, -0.0000, -0.2660],
          [-0.0000,  0.0000, -0.0000,  ...,  0.0000, -0.0000, -1.2258],
          [-0.0000, -0.0000,  0.0000,  ..., -0.0000,  0.0000, -0.2388]],

         [[-0.0000, -0.0000,  0.0000,  ..., -0.0000, -0.0000, -0.5362],
          [ 0.0000, -0.0000, -0.0000,  ...,  0.0000,  0.0000, -0.7091],
          [ 0.0000, -0.0000,  0.0000,  ...,  0.0000, -0.0000,  0.1407],
          [-0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000, -1.7987]]],


        [[[ 0.0000,  0.0000,  0.0000,  ..., -0.0000,  0.0000, -0.4976],
          [-0.0000,  0.0000,  0.0000,  ..., -0.0000,  0.0000,  0.6474],
          [ 0.0000,  0.0000, -0.0000,  ..., -0.0000, -0.0000, -0.5877],
          [ 0.0000, -0.0000, -0.0000,  ..., -0.0000,  0.0000,  0.2392]],

         [[-0.0000,  0.0000,  0.0000,  ...,  0.0000, -0.0000, -0.7112],
          [ 0.0000, -0.0000, -0.0000,  ..., -0.0000, -0.0000,  0.1707],
          [ 0.0000, -0.0000, -0.0000,  ..., -0.0000, -0.0000,  0.5566],
          [-0.0000, -0.0000, -0.0000,  ...,  0.0000, -0.0000, -0.3651]],

         [[ 0.0000,  0.0000, -0.0000,  ...,  0.0000, -0.0000,  0.4188],
          [ 0.0000, -0.0000, -0.0000,  ...,  0.0000,  0.0000,  0.1103],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.2400],
          [-0.0000, -0.0000,  0.0000,  ...,  0.0000, -0.0000, -0.6185]],

         ...,

         [[-0.0000,  0.0000, -0.0000,  ...,  0.0000, -0.0000, -0.8668],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000, -0.0000, -1.1995],
          [ 0.0000,  0.0000, -0.0000,  ..., -0.0000, -0.0000,  0.7325],
          [ 0.0000,  0.0000, -0.0000,  ..., -0.0000,  0.0000,  1.3249]],

         [[ 0.0000,  0.0000, -0.0000,  ...,  0.0000,  0.0000, -0.0916],
          [-0.0000,  0.0000,  0.0000,  ..., -0.0000,  0.0000,  0.6162],
          [-0.0000,  0.0000,  0.0000,  ..., -0.0000,  0.0000,  1.6984],
          [ 0.0000, -0.0000, -0.0000,  ...,  0.0000,  0.0000, -0.4897]],

         [[-0.0000, -0.0000, -0.0000,  ..., -0.0000,  0.0000, -1.5505],
          [-0.0000,  0.0000, -0.0000,  ..., -0.0000,  0.0000,  0.6484],
          [-0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.2149],
          [-0.0000, -0.0000,  0.0000,  ...,  0.0000, -0.0000, -0.8777]]],


        [[[-0.0000,  0.0000, -0.0000,  ..., -0.0000, -0.0000,  1.4493],
          [-0.0000, -0.0000, -0.0000,  ..., -0.0000, -0.0000, -0.7248],
          [-0.0000, -0.0000,  0.0000,  ...,  0.0000, -0.0000, -1.2823],
          [ 0.0000,  0.0000, -0.0000,  ...,  0.0000,  0.0000, -0.6022]],

         [[ 0.0000,  0.0000,  0.0000,  ..., -0.0000,  0.0000,  0.9432],
          [-0.0000,  0.0000,  0.0000,  ..., -0.0000,  0.0000, -1.5277],
          [-0.0000, -0.0000, -0.0000,  ..., -0.0000,  0.0000, -0.2871],
          [-0.0000, -0.0000, -0.0000,  ..., -0.0000, -0.0000, -0.1908]],

         [[ 0.0000,  0.0000,  0.0000,  ..., -0.0000, -0.0000,  0.1448],
          [ 0.0000, -0.0000, -0.0000,  ...,  0.0000,  0.0000,  1.2485],
          [ 0.0000, -0.0000,  0.0000,  ..., -0.0000, -0.0000,  2.6185],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  1.1287]],

         ...,

         [[ 0.0000,  0.0000,  0.0000,  ...,  0.0000, -0.0000,  0.9505],
          [-0.0000, -0.0000,  0.0000,  ..., -0.0000, -0.0000, -1.1679],
          [ 0.0000,  0.0000, -0.0000,  ...,  0.0000, -0.0000, -0.9861],
          [ 0.0000, -0.0000, -0.0000,  ..., -0.0000,  0.0000, -0.0700]],

         [[-0.0000, -0.0000, -0.0000,  ..., -0.0000, -0.0000,  1.8072],
          [-0.0000, -0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.6059],
          [-0.0000, -0.0000, -0.0000,  ...,  0.0000, -0.0000, -0.1415],
          [-0.0000, -0.0000,  0.0000,  ..., -0.0000,  0.0000,  2.0024]],

         [[ 0.0000,  0.0000, -0.0000,  ...,  0.0000, -0.0000,  2.8979],
          [-0.0000,  0.0000, -0.0000,  ..., -0.0000, -0.0000, -1.5589],
          [-0.0000,  0.0000,  0.0000,  ...,  0.0000, -0.0000,  0.1370],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  1.2942]]]])
>>> mult[0][3]
tensor([[ 0.0000,  0.0000, -0.0000,  1.4525,  0.0000,  0.0000,  0.0000, -1.3670],
        [ 0.0000,  0.0000, -0.0000, -0.5694,  0.0000, -0.0000,  0.0000, -0.8746],
        [ 0.0000,  0.0000,  0.0000, -0.2592, -0.0000, -0.0000, -0.0000, -1.2602],
        [-0.0000,  0.0000,  0.0000, -0.7018, -0.0000, -0.0000,  0.0000, -0.7381]])
>>> val
tensor([[0, 0, 0, 1, 0, 0, 0, 1],
        [0, 0, 0, 1, 0, 0, 0, 1],
        [0, 0, 0, 1, 0, 0, 0, 1],
        [0, 0, 0, 1, 0, 0, 0, 1]])
>>> val = val.unsqueeze(-1).unsqueeze(-1)
>>> val
tensor([[[[0]],

         [[0]],

         [[0]],

         [[1]],

         [[0]],

         [[0]],

         [[0]],

         [[1]]],


        [[[0]],

         [[0]],

         [[0]],

         [[1]],

         [[0]],

         [[0]],

         [[0]],

         [[1]]],


        [[[0]],

         [[0]],

         [[0]],

         [[1]],

         [[0]],

         [[0]],

         [[0]],

         [[1]]],


        [[[0]],

         [[0]],

         [[0]],

         [[1]],

         [[0]],

         [[0]],

         [[0]],

         [[1]]]])
>>> mult = val * Q
>>> mult
tensor([[[[-0.0000, -0.0000, -0.0000,  ...,  0.0000,  0.0000, -0.0000],
          [-0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000, -0.0000],
          [-0.0000,  0.0000, -0.0000,  ...,  0.0000, -0.0000,  0.0000],
          [-0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.0000, -0.0000,  0.0000,  ..., -0.0000, -0.0000,  0.0000],
          [-0.0000,  0.0000, -0.0000,  ..., -0.0000,  0.0000, -0.0000],
          [ 0.0000, -0.0000, -0.0000,  ...,  0.0000,  0.0000, -0.0000],
          [ 0.0000,  0.0000, -0.0000,  ...,  0.0000, -0.0000, -0.0000]],

         [[ 0.0000,  0.0000, -0.0000,  ...,  0.0000, -0.0000,  0.0000],
          [-0.0000,  0.0000,  0.0000,  ...,  0.0000, -0.0000, -0.0000],
          [ 0.0000, -0.0000,  0.0000,  ..., -0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ..., -0.0000,  0.0000,  0.0000]],

         ...,

         [[ 0.0000, -0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [-0.0000, -0.0000, -0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [-0.0000, -0.0000, -0.0000,  ..., -0.0000,  0.0000,  0.0000],
          [ 0.0000, -0.0000, -0.0000,  ..., -0.0000, -0.0000, -0.0000]],

         [[-0.0000, -0.0000, -0.0000,  ..., -0.0000, -0.0000,  0.0000],
          [ 0.0000, -0.0000,  0.0000,  ..., -0.0000,  0.0000,  0.0000],
          [-0.0000, -0.0000,  0.0000,  ..., -0.0000, -0.0000, -0.0000],
          [ 0.0000,  0.0000, -0.0000,  ..., -0.0000,  0.0000, -0.0000]],

         [[ 0.7260,  0.3704, -0.1050,  ...,  1.6842, -0.3185, -0.1926],
          [ 0.7143, -1.0871, -0.2766,  ..., -0.4647,  0.4664, -0.1992],
          [ 1.6630,  0.4296,  1.5810,  ...,  0.7046,  1.5690, -1.2089],
          [ 0.0120, -1.0105,  0.8317,  ..., -0.7081,  0.2422,  1.6557]]],


        [[[ 0.0000, -0.0000, -0.0000,  ..., -0.0000,  0.0000, -0.0000],
          [-0.0000,  0.0000,  0.0000,  ...,  0.0000, -0.0000, -0.0000],
          [-0.0000, -0.0000, -0.0000,  ...,  0.0000, -0.0000,  0.0000],
          [ 0.0000, -0.0000, -0.0000,  ..., -0.0000,  0.0000, -0.0000]],

         [[-0.0000,  0.0000, -0.0000,  ..., -0.0000, -0.0000,  0.0000],
          [-0.0000,  0.0000,  0.0000,  ..., -0.0000, -0.0000, -0.0000],
          [ 0.0000, -0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000, -0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.0000, -0.0000,  0.0000,  ..., -0.0000, -0.0000, -0.0000],
          [-0.0000, -0.0000, -0.0000,  ..., -0.0000, -0.0000,  0.0000],
          [ 0.0000,  0.0000, -0.0000,  ...,  0.0000, -0.0000,  0.0000],
          [ 0.0000, -0.0000, -0.0000,  ...,  0.0000,  0.0000, -0.0000]],

         ...,

         [[-0.0000,  0.0000, -0.0000,  ...,  0.0000, -0.0000, -0.0000],
          [ 0.0000, -0.0000,  0.0000,  ...,  0.0000,  0.0000, -0.0000],
          [ 0.0000, -0.0000, -0.0000,  ..., -0.0000,  0.0000, -0.0000],
          [ 0.0000,  0.0000, -0.0000,  ..., -0.0000, -0.0000, -0.0000]],

         [[ 0.0000,  0.0000, -0.0000,  ...,  0.0000,  0.0000, -0.0000],
          [ 0.0000,  0.0000, -0.0000,  ...,  0.0000, -0.0000, -0.0000],
          [-0.0000,  0.0000, -0.0000,  ...,  0.0000, -0.0000, -0.0000],
          [-0.0000, -0.0000,  0.0000,  ..., -0.0000,  0.0000, -0.0000]],

         [[-1.1086, -0.6725,  1.2144,  ..., -0.1687, -1.0801, -0.5362],
          [ 0.3726, -0.0751, -0.2003,  ...,  0.2461,  0.8613, -0.7091],
          [ 0.5526, -0.2340,  0.1508,  ...,  0.7586, -0.9354,  0.1407],
          [-0.5779,  0.6038,  0.2311,  ...,  1.1776,  0.1606, -1.7987]]],


        [[[ 0.0000,  0.0000,  0.0000,  ..., -0.0000,  0.0000, -0.0000],
          [-0.0000,  0.0000,  0.0000,  ..., -0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000, -0.0000,  ..., -0.0000, -0.0000, -0.0000],
          [ 0.0000, -0.0000, -0.0000,  ..., -0.0000,  0.0000,  0.0000]],

         [[-0.0000,  0.0000,  0.0000,  ...,  0.0000, -0.0000, -0.0000],
          [ 0.0000, -0.0000, -0.0000,  ..., -0.0000, -0.0000,  0.0000],
          [ 0.0000, -0.0000, -0.0000,  ..., -0.0000, -0.0000,  0.0000],
          [-0.0000, -0.0000, -0.0000,  ...,  0.0000, -0.0000, -0.0000]],

         [[ 0.0000,  0.0000, -0.0000,  ...,  0.0000, -0.0000,  0.0000],
          [ 0.0000, -0.0000, -0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [-0.0000, -0.0000,  0.0000,  ...,  0.0000, -0.0000, -0.0000]],

         ...,

         [[-0.0000,  0.0000, -0.0000,  ...,  0.0000, -0.0000, -0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000, -0.0000, -0.0000],
          [ 0.0000,  0.0000, -0.0000,  ..., -0.0000, -0.0000,  0.0000],
          [ 0.0000,  0.0000, -0.0000,  ..., -0.0000,  0.0000,  0.0000]],

         [[ 0.0000,  0.0000, -0.0000,  ...,  0.0000,  0.0000, -0.0000],
          [-0.0000,  0.0000,  0.0000,  ..., -0.0000,  0.0000,  0.0000],
          [-0.0000,  0.0000,  0.0000,  ..., -0.0000,  0.0000,  0.0000],
          [ 0.0000, -0.0000, -0.0000,  ...,  0.0000,  0.0000, -0.0000]],

         [[-1.2004, -1.8218, -0.2337,  ..., -1.9628,  0.6037, -1.5505],
          [-0.6490,  0.9413, -0.0125,  ..., -0.5218,  1.0758,  0.6484],
          [-0.7284,  0.9663,  0.6822,  ...,  0.3614,  1.1361,  0.2149],
          [-0.8862, -1.8663,  0.1696,  ...,  0.2394, -1.8176, -0.8777]]],


        [[[-0.0000,  0.0000, -0.0000,  ..., -0.0000, -0.0000,  0.0000],
          [-0.0000, -0.0000, -0.0000,  ..., -0.0000, -0.0000, -0.0000],
          [-0.0000, -0.0000,  0.0000,  ...,  0.0000, -0.0000, -0.0000],
          [ 0.0000,  0.0000, -0.0000,  ...,  0.0000,  0.0000, -0.0000]],

         [[ 0.0000,  0.0000,  0.0000,  ..., -0.0000,  0.0000,  0.0000],
          [-0.0000,  0.0000,  0.0000,  ..., -0.0000,  0.0000, -0.0000],
          [-0.0000, -0.0000, -0.0000,  ..., -0.0000,  0.0000, -0.0000],
          [-0.0000, -0.0000, -0.0000,  ..., -0.0000, -0.0000, -0.0000]],

         [[ 0.0000,  0.0000,  0.0000,  ..., -0.0000, -0.0000,  0.0000],
          [ 0.0000, -0.0000, -0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000, -0.0000,  0.0000,  ..., -0.0000, -0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         ...,

         [[ 0.0000,  0.0000,  0.0000,  ...,  0.0000, -0.0000,  0.0000],
          [-0.0000, -0.0000,  0.0000,  ..., -0.0000, -0.0000, -0.0000],
          [ 0.0000,  0.0000, -0.0000,  ...,  0.0000, -0.0000, -0.0000],
          [ 0.0000, -0.0000, -0.0000,  ..., -0.0000,  0.0000, -0.0000]],

         [[-0.0000, -0.0000, -0.0000,  ..., -0.0000, -0.0000,  0.0000],
          [-0.0000, -0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [-0.0000, -0.0000, -0.0000,  ...,  0.0000, -0.0000, -0.0000],
          [-0.0000, -0.0000,  0.0000,  ..., -0.0000,  0.0000,  0.0000]],

         [[ 0.4049,  0.9975, -0.0123,  ...,  0.5133, -1.0885,  2.8979],
          [-0.7671,  0.3409, -0.5882,  ..., -0.0417, -0.3250, -1.5589],
          [-1.1916,  0.8864,  0.1098,  ...,  0.3698, -0.7005,  0.1370],
          [ 0.0353,  0.6039,  0.2898,  ...,  1.6348,  0.5282,  1.2942]]]])
>>> mult.size()
torch.Size([4, 8, 4, 8])
>>> test = mult[:, mult!=0]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
IndexError: too many indices for tensor of dimension 4
>>> test = mult[mult!=0]
>>> tes
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tes' is not defined
>>> test
tensor([ 0.1569,  0.0476, -0.0947,  1.4525,  0.7163,  0.2570,  0.3403, -1.3670,
         0.7928,  1.0039, -0.5842, -0.5694,  0.4214, -0.1539,  0.3284, -0.8746,
         1.1827,  1.5229,  0.4774, -0.2592, -2.6080, -1.3277, -0.2382, -1.2602,
        -1.2069,  0.9888,  1.8788, -0.7018, -0.7878, -0.0464,  1.4833, -0.7381,
         0.7260,  0.3704, -0.1050, -0.0084, -0.9533,  1.6842, -0.3185, -0.1926,
         0.7143, -1.0871, -0.2766, -0.4747,  0.9075, -0.4647,  0.4664, -0.1992,
         1.6630,  0.4296,  1.5810,  0.8510, -1.3441,  0.7046,  1.5690, -1.2089,
         0.0120, -1.0105,  0.8317,  0.6049,  0.1691, -0.7081,  0.2422,  1.6557,
        -0.3374,  0.2681, -0.4219, -0.4299, -0.4312, -1.5184,  0.8555, -0.2558,
        -0.9295, -0.3367, -0.4130,  0.1587, -2.0271, -0.5274,  0.4276,  1.5259,
        -0.6420, -1.9685,  1.4923, -0.1947, -0.6706, -0.4530,  1.5723,  1.1543,
        -0.0037, -1.7554, -0.8772,  0.1160, -0.0286,  1.3032, -0.0172,  0.8228,
        -1.1086, -0.6725,  1.2144,  0.1460,  0.3487, -0.1687, -1.0801, -0.5362,
         0.3726, -0.0751, -0.2003,  0.8317, -0.6705,  0.2461,  0.8613, -0.7091,
         0.5526, -0.2340,  0.1508, -2.0216,  0.1663,  0.7586, -0.9354,  0.1407,
        -0.5779,  0.6038,  0.2311, -0.7957,  1.8794,  1.1776,  0.1606, -1.7987,
         1.0129,  0.5015,  0.4582, -0.6025,  0.6092, -1.8539, -1.0033,  2.4719,
        -1.1218,  0.4486, -1.1894,  0.0548,  0.1048,  0.8597,  1.3658, -2.1514,
        -0.0289,  0.0297, -1.4009, -1.2308, -0.0967, -2.4362,  0.0047, -0.8771,
        -0.4877, -1.1765, -1.7116, -1.2398, -2.0309,  0.8533, -1.0064,  1.0099,
        -1.2004, -1.8218, -0.2337, -0.2594, -0.6488, -1.9628,  0.6037, -1.5505,
        -0.6490,  0.9413, -0.0125,  0.3330, -0.0538, -0.5218,  1.0758,  0.6484,
        -0.7284,  0.9663,  0.6822, -1.0799,  0.3726,  0.3614,  1.1361,  0.2149,
        -0.8862, -1.8663,  0.1696,  1.4884,  2.2772,  0.2394, -1.8176, -0.8777,
         1.0768,  0.6230,  0.3370,  1.0559, -0.2854,  0.5103, -1.0921, -0.0427,
         0.1863,  1.5702, -0.9284, -0.8384, -1.3321,  0.5820,  0.7472, -0.1924,
        -0.8356,  0.0142,  1.6509,  1.3523,  0.6156,  1.1365,  0.4165, -0.0293,
        -0.5436, -0.7112,  1.1284, -1.2576,  0.7167,  1.4575,  1.0397, -0.4042,
         0.4049,  0.9975, -0.0123, -0.0720, -1.8256,  0.5133, -1.0885,  2.8979,
        -0.7671,  0.3409, -0.5882, -0.6804,  0.6699, -0.0417, -0.3250, -1.5589,
        -1.1916,  0.8864,  0.1098, -0.8347,  1.5187,  0.3698, -0.7005,  0.1370,
         0.0353,  0.6039,  0.2898,  3.0719, -1.6851,  1.6348,  0.5282,  1.2942])
>>> test.size()
torch.Size([256])
>>> test = mult[:, mult[ix]!=0]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'ix' is not defined
>>> test = mult[:, mult[:]!=0]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
IndexError: too many indices for tensor of dimension 4
>>> mult!=0
tensor([[[[False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False]],

         [[False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False]],

         [[False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False]],

         ...,

         [[False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False]],

         [[False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False]],

         [[ True,  True,  True,  ...,  True,  True,  True],
          [ True,  True,  True,  ...,  True,  True,  True],
          [ True,  True,  True,  ...,  True,  True,  True],
          [ True,  True,  True,  ...,  True,  True,  True]]],


        [[[False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False]],

         [[False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False]],

         [[False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False]],

         ...,

         [[False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False]],

         [[False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False]],

         [[ True,  True,  True,  ...,  True,  True,  True],
          [ True,  True,  True,  ...,  True,  True,  True],
          [ True,  True,  True,  ...,  True,  True,  True],
          [ True,  True,  True,  ...,  True,  True,  True]]],


        [[[False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False]],

         [[False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False]],

         [[False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False]],

         ...,

         [[False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False]],

         [[False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False]],

         [[ True,  True,  True,  ...,  True,  True,  True],
          [ True,  True,  True,  ...,  True,  True,  True],
          [ True,  True,  True,  ...,  True,  True,  True],
          [ True,  True,  True,  ...,  True,  True,  True]]],


        [[[False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False]],

         [[False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False]],

         [[False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False]],

         ...,

         [[False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False]],

         [[False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False],
          [False, False, False,  ..., False, False, False]],

         [[ True,  True,  True,  ...,  True,  True,  True],
          [ True,  True,  True,  ...,  True,  True,  True],
          [ True,  True,  True,  ...,  True,  True,  True],
          [ True,  True,  True,  ...,  True,  True,  True]]]])\
torch.Size([256])
>>> 4 * 4 * 8 * 8
1024
>>> test = mult[mult!=0].reshape(4, 2, 4, 8)
>>> test
tensor([[[[ 0.1569,  0.0476, -0.0947,  1.4525,  0.7163,  0.2570,  0.3403,
           -1.3670],
          [ 0.7928,  1.0039, -0.5842, -0.5694,  0.4214, -0.1539,  0.3284,
           -0.8746],
          [ 1.1827,  1.5229,  0.4774, -0.2592, -2.6080, -1.3277, -0.2382,
           -1.2602],
          [-1.2069,  0.9888,  1.8788, -0.7018, -0.7878, -0.0464,  1.4833,
           -0.7381]],

         [[ 0.7260,  0.3704, -0.1050, -0.0084, -0.9533,  1.6842, -0.3185,
           -0.1926],
          [ 0.7143, -1.0871, -0.2766, -0.4747,  0.9075, -0.4647,  0.4664,
           -0.1992],
          [ 1.6630,  0.4296,  1.5810,  0.8510, -1.3441,  0.7046,  1.5690,
           -1.2089],
          [ 0.0120, -1.0105,  0.8317,  0.6049,  0.1691, -0.7081,  0.2422,
            1.6557]]],


        [[[-0.3374,  0.2681, -0.4219, -0.4299, -0.4312, -1.5184,  0.8555,
           -0.2558],
          [-0.9295, -0.3367, -0.4130,  0.1587, -2.0271, -0.5274,  0.4276,
            1.5259],
          [-0.6420, -1.9685,  1.4923, -0.1947, -0.6706, -0.4530,  1.5723,
            1.1543],
          [-0.0037, -1.7554, -0.8772,  0.1160, -0.0286,  1.3032, -0.0172,
            0.8228]],

         [[-1.1086, -0.6725,  1.2144,  0.1460,  0.3487, -0.1687, -1.0801,
           -0.5362],
          [ 0.3726, -0.0751, -0.2003,  0.8317, -0.6705,  0.2461,  0.8613,
           -0.7091],
          [ 0.5526, -0.2340,  0.1508, -2.0216,  0.1663,  0.7586, -0.9354,
            0.1407],
          [-0.5779,  0.6038,  0.2311, -0.7957,  1.8794,  1.1776,  0.1606,
           -1.7987]]],


        [[[ 1.0129,  0.5015,  0.4582, -0.6025,  0.6092, -1.8539, -1.0033,
            2.4719],
          [-1.1218,  0.4486, -1.1894,  0.0548,  0.1048,  0.8597,  1.3658,
           -2.1514],
          [-0.0289,  0.0297, -1.4009, -1.2308, -0.0967, -2.4362,  0.0047,
           -0.8771],
          [-0.4877, -1.1765, -1.7116, -1.2398, -2.0309,  0.8533, -1.0064,
            1.0099]],

         [[-1.2004, -1.8218, -0.2337, -0.2594, -0.6488, -1.9628,  0.6037,
           -1.5505],
          [-0.6490,  0.9413, -0.0125,  0.3330, -0.0538, -0.5218,  1.0758,
            0.6484],
          [-0.7284,  0.9663,  0.6822, -1.0799,  0.3726,  0.3614,  1.1361,
            0.2149],
          [-0.8862, -1.8663,  0.1696,  1.4884,  2.2772,  0.2394, -1.8176,
           -0.8777]]],


        [[[ 1.0768,  0.6230,  0.3370,  1.0559, -0.2854,  0.5103, -1.0921,
           -0.0427],
          [ 0.1863,  1.5702, -0.9284, -0.8384, -1.3321,  0.5820,  0.7472,
           -0.1924],
          [-0.8356,  0.0142,  1.6509,  1.3523,  0.6156,  1.1365,  0.4165,
           -0.0293],
          [-0.5436, -0.7112,  1.1284, -1.2576,  0.7167,  1.4575,  1.0397,
           -0.4042]],

         [[ 0.4049,  0.9975, -0.0123, -0.0720, -1.8256,  0.5133, -1.0885,
            2.8979],
          [-0.7671,  0.3409, -0.5882, -0.6804,  0.6699, -0.0417, -0.3250,
           -1.5589],
          [-1.1916,  0.8864,  0.1098, -0.8347,  1.5187,  0.3698, -0.7005,
            0.1370],
          [ 0.0353,  0.6039,  0.2898,  3.0719, -1.6851,  1.6348,  0.5282,
            1.2942]]]])
>>> test[0][0]
tensor([[ 0.1569,  0.0476, -0.0947,  1.4525,  0.7163,  0.2570,  0.3403, -1.3670],
        [ 0.7928,  1.0039, -0.5842, -0.5694,  0.4214, -0.1539,  0.3284, -0.8746],
        [ 1.1827,  1.5229,  0.4774, -0.2592, -2.6080, -1.3277, -0.2382, -1.2602],
        [-1.2069,  0.9888,  1.8788, -0.7018, -0.7878, -0.0464,  1.4833, -0.7381]])
>>> mult[0][3]
tensor([[ 0.1569,  0.0476, -0.0947,  1.4525,  0.7163,  0.2570,  0.3403, -1.3670],
        [ 0.7928,  1.0039, -0.5842, -0.5694,  0.4214, -0.1539,  0.3284, -0.8746],
        [ 1.1827,  1.5229,  0.4774, -0.2592, -2.6080, -1.3277, -0.2382, -1.2602],
        [-1.2069,  0.9888,  1.8788, -0.7018, -0.7878, -0.0464,  1.4833, -0.7381]])
>>> 